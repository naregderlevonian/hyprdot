#!/bin/sh

usage() {
    cat << EOF
Usage:  hyprdot-control-paper get status|mode
        hyprdot-control-paper set status on|off|toggle [save] 
        hyprdot-control-paper set mode back|next [save]
        hyprdot-control-paper set paper {paper} [save]
        hyprdot-control-paper set restore
EOF
    exit 1
}

PROCESS="hyprpaper"
PAPERS_PATH="$HOME/.config/hypr/papers"
PAPERS=($(ls "$PAPERS_PATH" | grep -v "current" | sort))

check_paper_exists() {
    local paper="$1"
    if [ ! -d "$PAPERS_PATH/$paper" ]; then
        echo "Paper '$paper' not found."
        exit 1
    fi
}


is_enabled() {
    pgrep "$PROCESS" > /dev/null 2>&1
    return $?
}

restart() {
    killall $PROCESS
    $PROCESS > /dev/null 2>&1
}

refresh_symlink() {
    local paper="$1"
    rm -r "$PAPERS_PATH/current"
    ln -s "$PAPERS_PATH/$paper" "$PAPERS_PATH/current"
}

restore() {
    local status="$(load_status)"
    local paper="$(load_mode)"

    [ "$status" = "false" ] && {
        off;
        exit 0;
    }

    set_mode "$paper"
}

load_status() {
    hyprdot-settings read "paper.isEnabled"
}

load_mode() {
    hyprdot-settings read "paper.mode"
}

save_status() {
    hyprdot-settings assign "paper.isEnabled" "$1"
}

save_mode() {
    hyprdot-settings assign "paper.mode" "$1"
}

get_status() {
    is_enabled
    [ $? -eq 0 ] && echo "true" || echo "false"
}

get_mode() {
    local current="$(basename "$(readlink -f "$PAPERS_PATH/current")")"
    echo "$current"
}

set_mode() {
    local paper="$1"

    check_paper_exists "$paper"

    waynot send "Paper" "$paper"
    refresh_symlink "$paper"
    restart

    [ "$SAVE" -eq 1 ] && {
        save_status "true"
        save_mode "$paper";
    }
}

on() {
    set_mode "$(load_mode)"
}

off() {
    waynot send "Paper is off"
    killall $PROCESS

    [ "$SAVE" -eq 1 ] && {
        save_status "false"
    }
}

toggle() {
    is_enabled
    [ $? -eq 0 ]  && off || on
}

navigate() {
    local offset=$1

    if [ ${#PAPERS[@]} -eq 0 ]; then
        echo "No papers available."
        exit 1
    fi

    for i in "${!PAPERS[@]}"; do
        if [ "${PAPERS[$i]}" = "$(get_mode)" ]; then
            local new_index=$(( (i + offset + ${#PAPERS[@]}) % ${#PAPERS[@]} ))
            set_mode "${PAPERS[$new_index]}"
            return
        fi
    done
}

back() {
    is_enabled
    [ $? -eq 0 ] && navigate "-1"
}

next() {
    is_enabled
    [ $? -eq 0 ] && navigate "+1"
}

SAVE=0
[ "$4" = "save" ] && SAVE=1

case "$1" in
    "get")
        case "$2" in
            "status")
                get_status
                ;;
            "mode")
                get_mode
                ;;
            *)
                usage
                ;;
        esac
        ;;
    "set")
        case "$2" in
            "status")
                case "$3" in
                    "on")
                        on
                        ;;
                    "off")
                        off
                        ;;
                    "toggle")
                        toggle
                        ;;
                    *)      
                        usage
                        ;;
                esac
                ;;
            "mode")
                case "$3" in
                    "back")
                        back
                        ;;
                    "next")
                        next
                        ;;
                    *)
                        usage
                        ;;
                esac
                ;;
            "paper")
                set_mode "$3"
                ;;
            "restore")
                restore
                ;;
            *)      
                usage
                ;;
        esac
        ;;
    *)
        usage
        ;;
esac
